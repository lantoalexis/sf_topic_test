<?php

namespace Mazecon\TopicBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * Topic
 *
 * @ORM\Table(name="topic")
 * @ORM\Entity(repositoryClass="Mazecon\TopicBundle\Repository\TopicRepository")
 */
class Topic
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="title", type="string", length=255)
     * @Assert\Length(
     *     min = 3, minMessage="Ce champ doit contenir au moins {{ limit }} caractÃ¨res.",
     *     max = 255, maxMessage="Ce champ doit contenir au plus {{ limit }} caractÃ¨res.")
     *
     * @Assert\Regex(
     *     pattern="/^\d$/",
     *     match=false,
     *     message="Ce champ ne doit pas contenir un nombre.")
     */
    private $title;

    /**
     * @var
     * @ORM\ManyToOne(targetEntity="User", inversedBy="topics")
     * @ORM\JoinColumn(name="user_id", referencedColumnName="id")
     */
    private $user;


    /**
     * @var
     * @ORM\ManyToMany(targetEntity="User", inversedBy="topics")
     * @ORM\JoinTable(name="user_view_topic",
     *     joinColumns={@ORM\JoinColumn(name="topic_id", referencedColumnName="id", onDelete="CASCADE")},
     *     inverseJoinColumns={@ORM\JoinColumn(name="user_id", referencedColumnName="id", onDelete="CASCADE")})
     */

    private $users;


    /**
     * Get id
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }


    /**
     * Set user
     *
     * @param \Mazecon\TopicBundle\Entity\User $user
     *
     * @return Topic
     */
    public function setUser(\Mazecon\TopicBundle\Entity\User $user = null)
    {
        $this->user = $user;

        return $this;
    }

    /**
     * Get user
     *
     * @return \Mazecon\TopicBundle\Entity\User
     */
    public function getUser()
    {
        return $this->user;
    }

    /**
     * Set title
     *
     * @param string $title
     *
     * @return Topic
     */
    public function setTitle($title)
    {
        $this->title = $title;

        return $this;
    }

    /**
     * Get title
     *
     * @return string
     */
    public function getTitle()
    {
        return $this->title;
    }


    /**
     * Constructor
     */
    public function __construct()
    {
        $this->users = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Add user
     *
     * @param \Mazecon\TopicBundle\Entity\User $user
     *
     * @return Topic
     */
    public function addUser(\Mazecon\TopicBundle\Entity\User $user)
    {
        $this->users[] = $user;

        return $this;
    }

    /**
     * Remove user
     *
     * @param \Mazecon\TopicBundle\Entity\User $user
     */
    public function removeUser(\Mazecon\TopicBundle\Entity\User $user)
    {
        $this->users->removeElement($user);
    }

    /**
     * Get users
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getUsers()
    {
        return $this->users;
    }
}
